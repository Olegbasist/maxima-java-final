Итоговый проект
Задача:

Для решения задачи использовать репозиторий maxima-java-final

 

1. Выбрать предметную область содержащую минимум два различных класса объектов (кроме пользователей системы)

2. Реализовать хранение объектов в базе данных (можно использовать in-memory database с заполнением при старте приложения)

3. Реализовать различные уровни доступа к объектам системы — например, чтение всеми пользователями, запись только определенными
    (кроме доступа к учетным записям пользователей).

4. Реализовать не менее пяти (можно трёх) различных операций взаимодействия между объектами (исключая CD-операции)
    RU считаются, если это не RU одиночных объектов.
    Должны быть реализованы операции всех четырех типов CRUD.


Примеры предметных областей:

Торговля: Товар — Заказ, создать заказ, добавить товар, удалить товар,

Образование: Студент — Курс — Преподаватель

Медицина Пациент — Врач — Лечение

Проекты: Задача — Ответственный — Исполнитель

30 Января, 2023
aac2bcc7131b55ac0ae76ad50b66920bb623271b-1675093754861.mp4

//-------------------------------------------------------------------------------------------------
Выбранная область:
Культура (Музей): Экскурсия - Посетитель - Запись на экскурсию (резервирование места)

//////////////////////////////////////// Кратко:
Объекты:
    Экскурсия
    Гид
    Посетитель
    Место (резерв)

Основной объект должен быть - Экскурсия, или Место (резерв)

//////////////////////////////////////// Сущности:
Экскурсия:
    ID
    Название
    Описание
    Дата и время
    Гид (связь один к одному)
    Места (резервы) (один к многим)
    Завершена

Гид:
    ID
    Имя
    Экскурсии (один к многим)

Посетитель:
    ID
    Имя
    Контактные данные
    Зарезервированные места (резервы) (один к многим)

Место (резерв)
    ID
    Экскурсия (один к одному)
    Посетитель (один к одному)
    Завершен

///////////////////////////////////////CRUD:
Создать:
    экскурсию
    гида
    посетителя
    место (резерв)

Получить список:
    экскурсий с гидом и местами (резервами)
    экскурсий с посетителями
    гидов с экскурсиями
    посетителей с местами (резервами)
    мест (резервов)

Найти:
    выставку
    экскурсию
    гида
    посетителя
    место (резерв)

Назначить гида на экскурсию
Снять гида с экскурсии

Записать посетителя на экскурсию (зарезервировать 1 место / несколько мест)
Отменить запись посетителя на экскурсию

Завершить экскурсию и связанные места (резервы)

Удалить:
    выставку
    экскурсию
    гида
    посетителя
    место (резерв)

Очистить весь список (?):
    экскурсий
    гидов
    посетителей
    мест (резервов)
    
////////////////////////////////////Уровни доступа:
Admin - полный доступ
User -
    Создание посетителей
    Запись на экскурсию (резервирование мест (резервов))
    Отмена записи на экскурсию
    Просмотр списков (всех)
Customer -
    просмотр списков выставок и экскурсий
    Запись на экскурсию (резервирование мест (резервов))

//////////////////////////////////// Технологии:
Вариант 1:
    Spring
    h2
    Spring Security

Вариант 2: (Основа в 11.1)
    Spring Boot (11.1 и 11.2)
    h2 (7.1, 7.2, 7.3)
    JPA (9.1 и 9.2)
    REST (10.1 и 10.2, можно 10.3)
    Spring Security (12.2)

    Зависимости:
https://start.spring.io/#!type=maven-project&language=java&platformVersion=3.0.2&packaging=jar&jvmVersion=11&groupId=org.example&artifactId=maxima-java-final&name=maxima-java-final&description=Final%20project&packageName=org.example.maxima-java-final&dependencies=data-jpa,h2,web

Выбор:
    Spring / Spring Boot
    JPA / JDBC
    MVC (freemarker или thymeleaf) / REST (спецификация Open API)

HATEOAS ? - можно
Hibernate ??
/////////////////////////////////// Дополнительно:
Настройки перенести в application.properties (7.3 - )

//-------------------------------------------------------------------------------------------------

Комментарии из видео:
    Общие комментарии к финальному проекту в 16 февраля.

        -
